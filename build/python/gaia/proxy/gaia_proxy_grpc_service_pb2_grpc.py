# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from gaia.proxy import gaia_proxy_grpc_service_pb2 as gaia_dot_proxy_dot_gaia__proxy__grpc__service__pb2
from gaia.proxy import partner_config_pb2 as gaia_dot_proxy_dot_partner__config__pb2
from gaia.proxy import partner_resource_pb2 as gaia_dot_proxy_dot_partner__resource__pb2


class GaiaProxyGrpcStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Ping = channel.unary_unary(
                '/gaia.proxy.GaiaProxyGrpc/Ping',
                request_serializer=gaia_dot_proxy_dot_gaia__proxy__grpc__service__pb2.PingRequest.SerializeToString,
                response_deserializer=gaia_dot_proxy_dot_gaia__proxy__grpc__service__pb2.PingResponse.FromString,
                )
        self.ListPartnerConfig = channel.unary_unary(
                '/gaia.proxy.GaiaProxyGrpc/ListPartnerConfig',
                request_serializer=gaia_dot_proxy_dot_partner__config__pb2.PartnerConfigListRequest.SerializeToString,
                response_deserializer=gaia_dot_proxy_dot_partner__config__pb2.PartnerConfigListResponse.FromString,
                )
        self.GetPartnerConfig = channel.unary_unary(
                '/gaia.proxy.GaiaProxyGrpc/GetPartnerConfig',
                request_serializer=gaia_dot_proxy_dot_partner__config__pb2.PartnerConfigGetRequest.SerializeToString,
                response_deserializer=gaia_dot_proxy_dot_partner__config__pb2.PartnerConfigGetResponse.FromString,
                )
        self.AddPartnerConfig = channel.unary_unary(
                '/gaia.proxy.GaiaProxyGrpc/AddPartnerConfig',
                request_serializer=gaia_dot_proxy_dot_partner__config__pb2.PartnerConfigAddRequest.SerializeToString,
                response_deserializer=gaia_dot_proxy_dot_partner__config__pb2.PartnerConfigAddResponse.FromString,
                )
        self.SetAC = channel.unary_unary(
                '/gaia.proxy.GaiaProxyGrpc/SetAC',
                request_serializer=gaia_dot_proxy_dot_gaia__proxy__grpc__service__pb2.SetACRequest.SerializeToString,
                response_deserializer=gaia_dot_proxy_dot_gaia__proxy__grpc__service__pb2.SetACResponse.FromString,
                )
        self.GetPartnerResourceIdRange = channel.unary_unary(
                '/gaia.proxy.GaiaProxyGrpc/GetPartnerResourceIdRange',
                request_serializer=gaia_dot_proxy_dot_partner__resource__pb2.GetPartnerResourceIdRangeRequest.SerializeToString,
                response_deserializer=gaia_dot_proxy_dot_partner__resource__pb2.GetPartnerResourceIdRangeResponse.FromString,
                )
        self.GetUsers = channel.unary_unary(
                '/gaia.proxy.GaiaProxyGrpc/GetUsers',
                request_serializer=gaia_dot_proxy_dot_gaia__proxy__grpc__service__pb2.GetUsersRequest.SerializeToString,
                response_deserializer=gaia_dot_proxy_dot_gaia__proxy__grpc__service__pb2.GetUsersResponse.FromString,
                )
        self.GetDevices = channel.unary_unary(
                '/gaia.proxy.GaiaProxyGrpc/GetDevices',
                request_serializer=gaia_dot_proxy_dot_gaia__proxy__grpc__service__pb2.GetDevicesRequest.SerializeToString,
                response_deserializer=gaia_dot_proxy_dot_gaia__proxy__grpc__service__pb2.GetDevicesResponse.FromString,
                )
        self.GetUserDevice = channel.unary_unary(
                '/gaia.proxy.GaiaProxyGrpc/GetUserDevice',
                request_serializer=gaia_dot_proxy_dot_gaia__proxy__grpc__service__pb2.GetUserDeviceRequest.SerializeToString,
                response_deserializer=gaia_dot_proxy_dot_gaia__proxy__grpc__service__pb2.GetUserDeviceResponse.FromString,
                )


class GaiaProxyGrpcServicer(object):
    """Missing associated documentation comment in .proto file"""

    def Ping(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPartnerConfig(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPartnerConfig(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddPartnerConfig(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetAC(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPartnerResourceIdRange(self, request, context):
        """for sync
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUsers(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDevices(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserDevice(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GaiaProxyGrpcServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Ping': grpc.unary_unary_rpc_method_handler(
                    servicer.Ping,
                    request_deserializer=gaia_dot_proxy_dot_gaia__proxy__grpc__service__pb2.PingRequest.FromString,
                    response_serializer=gaia_dot_proxy_dot_gaia__proxy__grpc__service__pb2.PingResponse.SerializeToString,
            ),
            'ListPartnerConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPartnerConfig,
                    request_deserializer=gaia_dot_proxy_dot_partner__config__pb2.PartnerConfigListRequest.FromString,
                    response_serializer=gaia_dot_proxy_dot_partner__config__pb2.PartnerConfigListResponse.SerializeToString,
            ),
            'GetPartnerConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPartnerConfig,
                    request_deserializer=gaia_dot_proxy_dot_partner__config__pb2.PartnerConfigGetRequest.FromString,
                    response_serializer=gaia_dot_proxy_dot_partner__config__pb2.PartnerConfigGetResponse.SerializeToString,
            ),
            'AddPartnerConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.AddPartnerConfig,
                    request_deserializer=gaia_dot_proxy_dot_partner__config__pb2.PartnerConfigAddRequest.FromString,
                    response_serializer=gaia_dot_proxy_dot_partner__config__pb2.PartnerConfigAddResponse.SerializeToString,
            ),
            'SetAC': grpc.unary_unary_rpc_method_handler(
                    servicer.SetAC,
                    request_deserializer=gaia_dot_proxy_dot_gaia__proxy__grpc__service__pb2.SetACRequest.FromString,
                    response_serializer=gaia_dot_proxy_dot_gaia__proxy__grpc__service__pb2.SetACResponse.SerializeToString,
            ),
            'GetPartnerResourceIdRange': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPartnerResourceIdRange,
                    request_deserializer=gaia_dot_proxy_dot_partner__resource__pb2.GetPartnerResourceIdRangeRequest.FromString,
                    response_serializer=gaia_dot_proxy_dot_partner__resource__pb2.GetPartnerResourceIdRangeResponse.SerializeToString,
            ),
            'GetUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUsers,
                    request_deserializer=gaia_dot_proxy_dot_gaia__proxy__grpc__service__pb2.GetUsersRequest.FromString,
                    response_serializer=gaia_dot_proxy_dot_gaia__proxy__grpc__service__pb2.GetUsersResponse.SerializeToString,
            ),
            'GetDevices': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDevices,
                    request_deserializer=gaia_dot_proxy_dot_gaia__proxy__grpc__service__pb2.GetDevicesRequest.FromString,
                    response_serializer=gaia_dot_proxy_dot_gaia__proxy__grpc__service__pb2.GetDevicesResponse.SerializeToString,
            ),
            'GetUserDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserDevice,
                    request_deserializer=gaia_dot_proxy_dot_gaia__proxy__grpc__service__pb2.GetUserDeviceRequest.FromString,
                    response_serializer=gaia_dot_proxy_dot_gaia__proxy__grpc__service__pb2.GetUserDeviceResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'gaia.proxy.GaiaProxyGrpc', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GaiaProxyGrpc(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def Ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gaia.proxy.GaiaProxyGrpc/Ping',
            gaia_dot_proxy_dot_gaia__proxy__grpc__service__pb2.PingRequest.SerializeToString,
            gaia_dot_proxy_dot_gaia__proxy__grpc__service__pb2.PingResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPartnerConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gaia.proxy.GaiaProxyGrpc/ListPartnerConfig',
            gaia_dot_proxy_dot_partner__config__pb2.PartnerConfigListRequest.SerializeToString,
            gaia_dot_proxy_dot_partner__config__pb2.PartnerConfigListResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPartnerConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gaia.proxy.GaiaProxyGrpc/GetPartnerConfig',
            gaia_dot_proxy_dot_partner__config__pb2.PartnerConfigGetRequest.SerializeToString,
            gaia_dot_proxy_dot_partner__config__pb2.PartnerConfigGetResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddPartnerConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gaia.proxy.GaiaProxyGrpc/AddPartnerConfig',
            gaia_dot_proxy_dot_partner__config__pb2.PartnerConfigAddRequest.SerializeToString,
            gaia_dot_proxy_dot_partner__config__pb2.PartnerConfigAddResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetAC(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gaia.proxy.GaiaProxyGrpc/SetAC',
            gaia_dot_proxy_dot_gaia__proxy__grpc__service__pb2.SetACRequest.SerializeToString,
            gaia_dot_proxy_dot_gaia__proxy__grpc__service__pb2.SetACResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPartnerResourceIdRange(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gaia.proxy.GaiaProxyGrpc/GetPartnerResourceIdRange',
            gaia_dot_proxy_dot_partner__resource__pb2.GetPartnerResourceIdRangeRequest.SerializeToString,
            gaia_dot_proxy_dot_partner__resource__pb2.GetPartnerResourceIdRangeResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gaia.proxy.GaiaProxyGrpc/GetUsers',
            gaia_dot_proxy_dot_gaia__proxy__grpc__service__pb2.GetUsersRequest.SerializeToString,
            gaia_dot_proxy_dot_gaia__proxy__grpc__service__pb2.GetUsersResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDevices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gaia.proxy.GaiaProxyGrpc/GetDevices',
            gaia_dot_proxy_dot_gaia__proxy__grpc__service__pb2.GetDevicesRequest.SerializeToString,
            gaia_dot_proxy_dot_gaia__proxy__grpc__service__pb2.GetDevicesResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gaia.proxy.GaiaProxyGrpc/GetUserDevice',
            gaia_dot_proxy_dot_gaia__proxy__grpc__service__pb2.GetUserDeviceRequest.SerializeToString,
            gaia_dot_proxy_dot_gaia__proxy__grpc__service__pb2.GetUserDeviceResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
