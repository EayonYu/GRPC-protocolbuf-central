# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from protocol.gaia.mirror import device_pb2 as protocol_dot_gaia_dot_mirror_dot_device__pb2
from protocol.gaia.mirror import gaia_mirror_grpc_service_pb2 as protocol_dot_gaia_dot_mirror_dot_gaia__mirror__grpc__service__pb2
from protocol.gaia.mirror import user_pb2 as protocol_dot_gaia_dot_mirror_dot_user__pb2


class MirrorStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Ping = channel.unary_unary(
                '/protocol.gaia.mirror.Mirror/Ping',
                request_serializer=protocol_dot_gaia_dot_mirror_dot_gaia__mirror__grpc__service__pb2.PingRequest.SerializeToString,
                response_deserializer=protocol_dot_gaia_dot_mirror_dot_gaia__mirror__grpc__service__pb2.PingResponse.FromString,
                )
        self.GetUserList = channel.unary_unary(
                '/protocol.gaia.mirror.Mirror/GetUserList',
                request_serializer=protocol_dot_gaia_dot_mirror_dot_user__pb2.GetUserListRequest.SerializeToString,
                response_deserializer=protocol_dot_gaia_dot_mirror_dot_user__pb2.GetUserListResponse.FromString,
                )
        self.GetDevicesByPartnerUser = channel.unary_unary(
                '/protocol.gaia.mirror.Mirror/GetDevicesByPartnerUser',
                request_serializer=protocol_dot_gaia_dot_mirror_dot_device__pb2.GetDevicesByPartnerUserRequest.SerializeToString,
                response_deserializer=protocol_dot_gaia_dot_mirror_dot_device__pb2.GetDevicesByPartnerUserResponse.FromString,
                )
        self.GetPartnerDevicesByIds = channel.unary_unary(
                '/protocol.gaia.mirror.Mirror/GetPartnerDevicesByIds',
                request_serializer=protocol_dot_gaia_dot_mirror_dot_device__pb2.GetPartnerDevicesByIdsRequest.SerializeToString,
                response_deserializer=protocol_dot_gaia_dot_mirror_dot_device__pb2.GetPartnerDevicesByIdsResponse.FromString,
                )
        self.GetUsersRange = channel.unary_unary(
                '/protocol.gaia.mirror.Mirror/GetUsersRange',
                request_serializer=protocol_dot_gaia_dot_mirror_dot_user__pb2.GetUsersRangeRequest.SerializeToString,
                response_deserializer=protocol_dot_gaia_dot_mirror_dot_user__pb2.GetUsersRangeResponse.FromString,
                )
        self.GetDevicesRange = channel.unary_unary(
                '/protocol.gaia.mirror.Mirror/GetDevicesRange',
                request_serializer=protocol_dot_gaia_dot_mirror_dot_device__pb2.GetDevicesRangeRequest.SerializeToString,
                response_deserializer=protocol_dot_gaia_dot_mirror_dot_device__pb2.GetDevicesRangeResponse.FromString,
                )
        self.GetUserDevicesRange = channel.unary_unary(
                '/protocol.gaia.mirror.Mirror/GetUserDevicesRange',
                request_serializer=protocol_dot_gaia_dot_mirror_dot_device__pb2.GetUserDevicesRangeRequest.SerializeToString,
                response_deserializer=protocol_dot_gaia_dot_mirror_dot_device__pb2.GetUserDevicesRangeResponse.FromString,
                )


class MirrorServicer(object):
    """Missing associated documentation comment in .proto file"""

    def Ping(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserList(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDevicesByPartnerUser(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPartnerDevicesByIds(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUsersRange(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDevicesRange(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserDevicesRange(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MirrorServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Ping': grpc.unary_unary_rpc_method_handler(
                    servicer.Ping,
                    request_deserializer=protocol_dot_gaia_dot_mirror_dot_gaia__mirror__grpc__service__pb2.PingRequest.FromString,
                    response_serializer=protocol_dot_gaia_dot_mirror_dot_gaia__mirror__grpc__service__pb2.PingResponse.SerializeToString,
            ),
            'GetUserList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserList,
                    request_deserializer=protocol_dot_gaia_dot_mirror_dot_user__pb2.GetUserListRequest.FromString,
                    response_serializer=protocol_dot_gaia_dot_mirror_dot_user__pb2.GetUserListResponse.SerializeToString,
            ),
            'GetDevicesByPartnerUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDevicesByPartnerUser,
                    request_deserializer=protocol_dot_gaia_dot_mirror_dot_device__pb2.GetDevicesByPartnerUserRequest.FromString,
                    response_serializer=protocol_dot_gaia_dot_mirror_dot_device__pb2.GetDevicesByPartnerUserResponse.SerializeToString,
            ),
            'GetPartnerDevicesByIds': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPartnerDevicesByIds,
                    request_deserializer=protocol_dot_gaia_dot_mirror_dot_device__pb2.GetPartnerDevicesByIdsRequest.FromString,
                    response_serializer=protocol_dot_gaia_dot_mirror_dot_device__pb2.GetPartnerDevicesByIdsResponse.SerializeToString,
            ),
            'GetUsersRange': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUsersRange,
                    request_deserializer=protocol_dot_gaia_dot_mirror_dot_user__pb2.GetUsersRangeRequest.FromString,
                    response_serializer=protocol_dot_gaia_dot_mirror_dot_user__pb2.GetUsersRangeResponse.SerializeToString,
            ),
            'GetDevicesRange': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDevicesRange,
                    request_deserializer=protocol_dot_gaia_dot_mirror_dot_device__pb2.GetDevicesRangeRequest.FromString,
                    response_serializer=protocol_dot_gaia_dot_mirror_dot_device__pb2.GetDevicesRangeResponse.SerializeToString,
            ),
            'GetUserDevicesRange': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserDevicesRange,
                    request_deserializer=protocol_dot_gaia_dot_mirror_dot_device__pb2.GetUserDevicesRangeRequest.FromString,
                    response_serializer=protocol_dot_gaia_dot_mirror_dot_device__pb2.GetUserDevicesRangeResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'protocol.gaia.mirror.Mirror', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Mirror(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def Ping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.gaia.mirror.Mirror/Ping',
            protocol_dot_gaia_dot_mirror_dot_gaia__mirror__grpc__service__pb2.PingRequest.SerializeToString,
            protocol_dot_gaia_dot_mirror_dot_gaia__mirror__grpc__service__pb2.PingResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.gaia.mirror.Mirror/GetUserList',
            protocol_dot_gaia_dot_mirror_dot_user__pb2.GetUserListRequest.SerializeToString,
            protocol_dot_gaia_dot_mirror_dot_user__pb2.GetUserListResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDevicesByPartnerUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.gaia.mirror.Mirror/GetDevicesByPartnerUser',
            protocol_dot_gaia_dot_mirror_dot_device__pb2.GetDevicesByPartnerUserRequest.SerializeToString,
            protocol_dot_gaia_dot_mirror_dot_device__pb2.GetDevicesByPartnerUserResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPartnerDevicesByIds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.gaia.mirror.Mirror/GetPartnerDevicesByIds',
            protocol_dot_gaia_dot_mirror_dot_device__pb2.GetPartnerDevicesByIdsRequest.SerializeToString,
            protocol_dot_gaia_dot_mirror_dot_device__pb2.GetPartnerDevicesByIdsResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUsersRange(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.gaia.mirror.Mirror/GetUsersRange',
            protocol_dot_gaia_dot_mirror_dot_user__pb2.GetUsersRangeRequest.SerializeToString,
            protocol_dot_gaia_dot_mirror_dot_user__pb2.GetUsersRangeResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDevicesRange(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.gaia.mirror.Mirror/GetDevicesRange',
            protocol_dot_gaia_dot_mirror_dot_device__pb2.GetDevicesRangeRequest.SerializeToString,
            protocol_dot_gaia_dot_mirror_dot_device__pb2.GetDevicesRangeResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetUserDevicesRange(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/protocol.gaia.mirror.Mirror/GetUserDevicesRange',
            protocol_dot_gaia_dot_mirror_dot_device__pb2.GetUserDevicesRangeRequest.SerializeToString,
            protocol_dot_gaia_dot_mirror_dot_device__pb2.GetUserDevicesRangeResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
