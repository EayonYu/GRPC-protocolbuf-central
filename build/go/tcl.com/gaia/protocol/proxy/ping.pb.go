// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protocol/gaia/proxy/ping.proto

package proxy // import "tcl.com/gaia/protocol/proxy"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PingRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingRequest) Reset()         { *m = PingRequest{} }
func (m *PingRequest) String() string { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()    {}
func (*PingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ping_d8065998b0d64a16, []int{0}
}
func (m *PingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingRequest.Unmarshal(m, b)
}
func (m *PingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingRequest.Marshal(b, m, deterministic)
}
func (dst *PingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingRequest.Merge(dst, src)
}
func (m *PingRequest) XXX_Size() int {
	return xxx_messageInfo_PingRequest.Size(m)
}
func (m *PingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PingRequest proto.InternalMessageInfo

type PingResponse struct {
	Pong                 *bool    `protobuf:"varint,1,req,name=pong" json:"pong,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingResponse) Reset()         { *m = PingResponse{} }
func (m *PingResponse) String() string { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()    {}
func (*PingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ping_d8065998b0d64a16, []int{1}
}
func (m *PingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingResponse.Unmarshal(m, b)
}
func (m *PingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingResponse.Marshal(b, m, deterministic)
}
func (dst *PingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingResponse.Merge(dst, src)
}
func (m *PingResponse) XXX_Size() int {
	return xxx_messageInfo_PingResponse.Size(m)
}
func (m *PingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PingResponse proto.InternalMessageInfo

func (m *PingResponse) GetPong() bool {
	if m != nil && m.Pong != nil {
		return *m.Pong
	}
	return false
}

func init() {
	proto.RegisterType((*PingRequest)(nil), "protocol.gaia.proxy.PingRequest")
	proto.RegisterType((*PingResponse)(nil), "protocol.gaia.proxy.PingResponse")
}

func init() {
	proto.RegisterFile("protocol/gaia/proxy/ping.proto", fileDescriptor_ping_d8065998b0d64a16)
}

var fileDescriptor_ping_d8065998b0d64a16 = []byte{
	// 136 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x4f, 0xce, 0xcf, 0xd1, 0x4f, 0x4f, 0xcc, 0x4c, 0xd4, 0x2f, 0x28, 0xca, 0xaf, 0xa8, 0xd4,
	0x2f, 0xc8, 0xcc, 0x4b, 0xd7, 0x03, 0x4b, 0x08, 0x09, 0xc3, 0xe4, 0xf5, 0x40, 0xf2, 0x7a, 0x60,
	0x79, 0x25, 0x5e, 0x2e, 0xee, 0x80, 0xcc, 0xbc, 0xf4, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12,
	0x25, 0x25, 0x2e, 0x1e, 0x08, 0xb7, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55, 0x48, 0x88, 0x8b, 0xa5,
	0x20, 0x3f, 0x2f, 0x5d, 0x82, 0x51, 0x81, 0x49, 0x83, 0x23, 0x08, 0xcc, 0x76, 0xb2, 0xe2, 0x92,
	0x4e, 0xce, 0xcf, 0xd5, 0x2b, 0x49, 0x46, 0x18, 0x04, 0x31, 0x16, 0x6c, 0x62, 0x94, 0x34, 0x48,
	0x22, 0x39, 0x3f, 0x17, 0xee, 0x0a, 0x88, 0x9b, 0xc0, 0x92, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x74, 0xb5, 0xc2, 0x72, 0xa4, 0x00, 0x00, 0x00,
}
