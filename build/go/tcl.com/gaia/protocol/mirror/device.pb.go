// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.4
// source: protocol/gaia/mirror/device.proto

package mirror

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type UserDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	PartnerName    *string `protobuf:"bytes,2,opt,name=partner_name,json=partnerName" json:"partner_name,omitempty"`
	PartnerUuid    *string `protobuf:"bytes,3,opt,name=partner_uuid,json=partnerUuid" json:"partner_uuid,omitempty"`
	OriginUserId   *int32  `protobuf:"varint,4,opt,name=origin_user_id,json=originUserId" json:"origin_user_id,omitempty"`
	OriginDeviceId *int32  `protobuf:"varint,5,opt,name=origin_device_id,json=originDeviceId" json:"origin_device_id,omitempty"`
	Nick           *string `protobuf:"bytes,6,opt,name=nick" json:"nick,omitempty"`
	Available      *int32  `protobuf:"varint,7,opt,name=available" json:"available,omitempty"`
	Type           *int32  `protobuf:"varint,8,opt,name=type" json:"type,omitempty"`
	Body           *string `protobuf:"bytes,9,opt,name=body" json:"body,omitempty"`
	CreatedAt      *string `protobuf:"bytes,10,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt      *string `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
}

func (x *UserDevice) Reset() {
	*x = UserDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_gaia_mirror_device_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDevice) ProtoMessage() {}

func (x *UserDevice) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_gaia_mirror_device_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDevice.ProtoReflect.Descriptor instead.
func (*UserDevice) Descriptor() ([]byte, []int) {
	return file_protocol_gaia_mirror_device_proto_rawDescGZIP(), []int{0}
}

func (x *UserDevice) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *UserDevice) GetPartnerName() string {
	if x != nil && x.PartnerName != nil {
		return *x.PartnerName
	}
	return ""
}

func (x *UserDevice) GetPartnerUuid() string {
	if x != nil && x.PartnerUuid != nil {
		return *x.PartnerUuid
	}
	return ""
}

func (x *UserDevice) GetOriginUserId() int32 {
	if x != nil && x.OriginUserId != nil {
		return *x.OriginUserId
	}
	return 0
}

func (x *UserDevice) GetOriginDeviceId() int32 {
	if x != nil && x.OriginDeviceId != nil {
		return *x.OriginDeviceId
	}
	return 0
}

func (x *UserDevice) GetNick() string {
	if x != nil && x.Nick != nil {
		return *x.Nick
	}
	return ""
}

func (x *UserDevice) GetAvailable() int32 {
	if x != nil && x.Available != nil {
		return *x.Available
	}
	return 0
}

func (x *UserDevice) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *UserDevice) GetBody() string {
	if x != nil && x.Body != nil {
		return *x.Body
	}
	return ""
}

func (x *UserDevice) GetCreatedAt() string {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return ""
}

func (x *UserDevice) GetUpdatedAt() string {
	if x != nil && x.UpdatedAt != nil {
		return *x.UpdatedAt
	}
	return ""
}

type GetDevicesByPartnerUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerUuid   *string `protobuf:"bytes,1,opt,name=partner_uuid,json=partnerUuid" json:"partner_uuid,omitempty"`
	PartnerUserId *string `protobuf:"bytes,2,opt,name=partner_user_id,json=partnerUserId" json:"partner_user_id,omitempty"`
}

func (x *GetDevicesByPartnerUserRequest) Reset() {
	*x = GetDevicesByPartnerUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_gaia_mirror_device_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDevicesByPartnerUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDevicesByPartnerUserRequest) ProtoMessage() {}

func (x *GetDevicesByPartnerUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_gaia_mirror_device_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDevicesByPartnerUserRequest.ProtoReflect.Descriptor instead.
func (*GetDevicesByPartnerUserRequest) Descriptor() ([]byte, []int) {
	return file_protocol_gaia_mirror_device_proto_rawDescGZIP(), []int{1}
}

func (x *GetDevicesByPartnerUserRequest) GetPartnerUuid() string {
	if x != nil && x.PartnerUuid != nil {
		return *x.PartnerUuid
	}
	return ""
}

func (x *GetDevicesByPartnerUserRequest) GetPartnerUserId() string {
	if x != nil && x.PartnerUserId != nil {
		return *x.PartnerUserId
	}
	return ""
}

type GetDevicesByPartnerUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    *int32        `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message *string       `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Data    []*UserDevice `protobuf:"bytes,4,rep,name=data" json:"data,omitempty"`
}

func (x *GetDevicesByPartnerUserResponse) Reset() {
	*x = GetDevicesByPartnerUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_gaia_mirror_device_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDevicesByPartnerUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDevicesByPartnerUserResponse) ProtoMessage() {}

func (x *GetDevicesByPartnerUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_gaia_mirror_device_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDevicesByPartnerUserResponse.ProtoReflect.Descriptor instead.
func (*GetDevicesByPartnerUserResponse) Descriptor() ([]byte, []int) {
	return file_protocol_gaia_mirror_device_proto_rawDescGZIP(), []int{2}
}

func (x *GetDevicesByPartnerUserResponse) GetCode() int32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *GetDevicesByPartnerUserResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *GetDevicesByPartnerUserResponse) GetData() []*UserDevice {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetDevicesRangeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start *int32 `protobuf:"varint,1,opt,name=start" json:"start,omitempty"`
	End   *int32 `protobuf:"varint,2,opt,name=end" json:"end,omitempty"`
}

func (x *GetDevicesRangeData) Reset() {
	*x = GetDevicesRangeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_gaia_mirror_device_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDevicesRangeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDevicesRangeData) ProtoMessage() {}

func (x *GetDevicesRangeData) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_gaia_mirror_device_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDevicesRangeData.ProtoReflect.Descriptor instead.
func (*GetDevicesRangeData) Descriptor() ([]byte, []int) {
	return file_protocol_gaia_mirror_device_proto_rawDescGZIP(), []int{3}
}

func (x *GetDevicesRangeData) GetStart() int32 {
	if x != nil && x.Start != nil {
		return *x.Start
	}
	return 0
}

func (x *GetDevicesRangeData) GetEnd() int32 {
	if x != nil && x.End != nil {
		return *x.End
	}
	return 0
}

type GetDevicesRangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerUuid *string `protobuf:"bytes,1,opt,name=partner_uuid,json=partnerUuid" json:"partner_uuid,omitempty"`
}

func (x *GetDevicesRangeRequest) Reset() {
	*x = GetDevicesRangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_gaia_mirror_device_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDevicesRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDevicesRangeRequest) ProtoMessage() {}

func (x *GetDevicesRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_gaia_mirror_device_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDevicesRangeRequest.ProtoReflect.Descriptor instead.
func (*GetDevicesRangeRequest) Descriptor() ([]byte, []int) {
	return file_protocol_gaia_mirror_device_proto_rawDescGZIP(), []int{4}
}

func (x *GetDevicesRangeRequest) GetPartnerUuid() string {
	if x != nil && x.PartnerUuid != nil {
		return *x.PartnerUuid
	}
	return ""
}

type GetDevicesRangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    *int32               `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message *string              `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Data    *GetDevicesRangeData `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (x *GetDevicesRangeResponse) Reset() {
	*x = GetDevicesRangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_gaia_mirror_device_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDevicesRangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDevicesRangeResponse) ProtoMessage() {}

func (x *GetDevicesRangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_gaia_mirror_device_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDevicesRangeResponse.ProtoReflect.Descriptor instead.
func (*GetDevicesRangeResponse) Descriptor() ([]byte, []int) {
	return file_protocol_gaia_mirror_device_proto_rawDescGZIP(), []int{5}
}

func (x *GetDevicesRangeResponse) GetCode() int32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *GetDevicesRangeResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *GetDevicesRangeResponse) GetData() *GetDevicesRangeData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetUserDevicesRangeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start *int32 `protobuf:"varint,1,opt,name=start" json:"start,omitempty"`
	End   *int32 `protobuf:"varint,2,opt,name=end" json:"end,omitempty"`
}

func (x *GetUserDevicesRangeData) Reset() {
	*x = GetUserDevicesRangeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_gaia_mirror_device_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDevicesRangeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDevicesRangeData) ProtoMessage() {}

func (x *GetUserDevicesRangeData) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_gaia_mirror_device_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDevicesRangeData.ProtoReflect.Descriptor instead.
func (*GetUserDevicesRangeData) Descriptor() ([]byte, []int) {
	return file_protocol_gaia_mirror_device_proto_rawDescGZIP(), []int{6}
}

func (x *GetUserDevicesRangeData) GetStart() int32 {
	if x != nil && x.Start != nil {
		return *x.Start
	}
	return 0
}

func (x *GetUserDevicesRangeData) GetEnd() int32 {
	if x != nil && x.End != nil {
		return *x.End
	}
	return 0
}

type GetUserDevicesRangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerUuid *string `protobuf:"bytes,1,opt,name=partner_uuid,json=partnerUuid" json:"partner_uuid,omitempty"`
}

func (x *GetUserDevicesRangeRequest) Reset() {
	*x = GetUserDevicesRangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_gaia_mirror_device_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDevicesRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDevicesRangeRequest) ProtoMessage() {}

func (x *GetUserDevicesRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_gaia_mirror_device_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDevicesRangeRequest.ProtoReflect.Descriptor instead.
func (*GetUserDevicesRangeRequest) Descriptor() ([]byte, []int) {
	return file_protocol_gaia_mirror_device_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserDevicesRangeRequest) GetPartnerUuid() string {
	if x != nil && x.PartnerUuid != nil {
		return *x.PartnerUuid
	}
	return ""
}

type GetUserDevicesRangeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    *int32                   `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message *string                  `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Data    *GetUserDevicesRangeData `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
}

func (x *GetUserDevicesRangeResponse) Reset() {
	*x = GetUserDevicesRangeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_gaia_mirror_device_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDevicesRangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDevicesRangeResponse) ProtoMessage() {}

func (x *GetUserDevicesRangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_gaia_mirror_device_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDevicesRangeResponse.ProtoReflect.Descriptor instead.
func (*GetUserDevicesRangeResponse) Descriptor() ([]byte, []int) {
	return file_protocol_gaia_mirror_device_proto_rawDescGZIP(), []int{8}
}

func (x *GetUserDevicesRangeResponse) GetCode() int32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *GetUserDevicesRangeResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *GetUserDevicesRangeResponse) GetData() *GetUserDevicesRangeData {
	if x != nil {
		return x.Data
	}
	return nil
}

type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	PartnerName    *string `protobuf:"bytes,2,opt,name=partner_name,json=partnerName" json:"partner_name,omitempty"`
	PartnerUuid    *string `protobuf:"bytes,3,opt,name=partner_uuid,json=partnerUuid" json:"partner_uuid,omitempty"`
	OriginDeviceId *int32  `protobuf:"varint,4,opt,name=origin_device_id,json=originDeviceId" json:"origin_device_id,omitempty"`
	NickName       *string `protobuf:"bytes,5,opt,name=nick_name,json=nickName" json:"nick_name,omitempty"`
	Category       *string `protobuf:"bytes,6,opt,name=category" json:"category,omitempty"`
	DeviceType     *string `protobuf:"bytes,7,opt,name=device_type,json=deviceType" json:"device_type,omitempty"`
	HeadUrl        *string `protobuf:"bytes,8,opt,name=head_url,json=headUrl" json:"head_url,omitempty"`
	Mac            *string `protobuf:"bytes,9,opt,name=mac" json:"mac,omitempty"`
	Body           *string `protobuf:"bytes,10,opt,name=body" json:"body,omitempty"`
	CreatedAt      *string `protobuf:"bytes,11,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt      *string `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_gaia_mirror_device_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_gaia_mirror_device_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_protocol_gaia_mirror_device_proto_rawDescGZIP(), []int{9}
}

func (x *Device) GetId() int32 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *Device) GetPartnerName() string {
	if x != nil && x.PartnerName != nil {
		return *x.PartnerName
	}
	return ""
}

func (x *Device) GetPartnerUuid() string {
	if x != nil && x.PartnerUuid != nil {
		return *x.PartnerUuid
	}
	return ""
}

func (x *Device) GetOriginDeviceId() int32 {
	if x != nil && x.OriginDeviceId != nil {
		return *x.OriginDeviceId
	}
	return 0
}

func (x *Device) GetNickName() string {
	if x != nil && x.NickName != nil {
		return *x.NickName
	}
	return ""
}

func (x *Device) GetCategory() string {
	if x != nil && x.Category != nil {
		return *x.Category
	}
	return ""
}

func (x *Device) GetDeviceType() string {
	if x != nil && x.DeviceType != nil {
		return *x.DeviceType
	}
	return ""
}

func (x *Device) GetHeadUrl() string {
	if x != nil && x.HeadUrl != nil {
		return *x.HeadUrl
	}
	return ""
}

func (x *Device) GetMac() string {
	if x != nil && x.Mac != nil {
		return *x.Mac
	}
	return ""
}

func (x *Device) GetBody() string {
	if x != nil && x.Body != nil {
		return *x.Body
	}
	return ""
}

func (x *Device) GetCreatedAt() string {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return ""
}

func (x *Device) GetUpdatedAt() string {
	if x != nil && x.UpdatedAt != nil {
		return *x.UpdatedAt
	}
	return ""
}

type GetPartnerDevicesByIdsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartnerUuid *string `protobuf:"bytes,1,opt,name=partner_uuid,json=partnerUuid" json:"partner_uuid,omitempty"`
	DeviceIds   []int32 `protobuf:"varint,2,rep,name=device_ids,json=deviceIds" json:"device_ids,omitempty"`
}

func (x *GetPartnerDevicesByIdsRequest) Reset() {
	*x = GetPartnerDevicesByIdsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_gaia_mirror_device_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPartnerDevicesByIdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPartnerDevicesByIdsRequest) ProtoMessage() {}

func (x *GetPartnerDevicesByIdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_gaia_mirror_device_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPartnerDevicesByIdsRequest.ProtoReflect.Descriptor instead.
func (*GetPartnerDevicesByIdsRequest) Descriptor() ([]byte, []int) {
	return file_protocol_gaia_mirror_device_proto_rawDescGZIP(), []int{10}
}

func (x *GetPartnerDevicesByIdsRequest) GetPartnerUuid() string {
	if x != nil && x.PartnerUuid != nil {
		return *x.PartnerUuid
	}
	return ""
}

func (x *GetPartnerDevicesByIdsRequest) GetDeviceIds() []int32 {
	if x != nil {
		return x.DeviceIds
	}
	return nil
}

type GetPartnerDevicesByIdsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    *int32    `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Message *string   `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Data    []*Device `protobuf:"bytes,3,rep,name=data" json:"data,omitempty"`
}

func (x *GetPartnerDevicesByIdsResponse) Reset() {
	*x = GetPartnerDevicesByIdsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocol_gaia_mirror_device_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPartnerDevicesByIdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPartnerDevicesByIdsResponse) ProtoMessage() {}

func (x *GetPartnerDevicesByIdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_gaia_mirror_device_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPartnerDevicesByIdsResponse.ProtoReflect.Descriptor instead.
func (*GetPartnerDevicesByIdsResponse) Descriptor() ([]byte, []int) {
	return file_protocol_gaia_mirror_device_proto_rawDescGZIP(), []int{11}
}

func (x *GetPartnerDevicesByIdsResponse) GetCode() int32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *GetPartnerDevicesByIdsResponse) GetMessage() string {
	if x != nil && x.Message != nil {
		return *x.Message
	}
	return ""
}

func (x *GetPartnerDevicesByIdsResponse) GetData() []*Device {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_protocol_gaia_mirror_device_proto protoreflect.FileDescriptor

var file_protocol_gaia_mirror_device_proto_rawDesc = []byte{
	0x0a, 0x21, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x67, 0x61, 0x69, 0x61, 0x2f,
	0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61,
	0x69, 0x61, 0x2e, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xca, 0x02, 0x0a, 0x0a, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x24,
	0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x69,
	0x63, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x6b, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x70,
	0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x42, 0x79, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67,
	0x61, 0x69, 0x61, 0x2e, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3d, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x3b, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74,
	0x6e, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x22, 0x86, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x3d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e,
	0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x41, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x65, 0x6e, 0x64, 0x22, 0x3f, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72,
	0x55, 0x75, 0x69, 0x64, 0x22, 0x8e, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x41, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x69, 0x61,
	0x2e, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe1, 0x02, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x6e,
	0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x65,
	0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x65,
	0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x63, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x61, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x61, 0x0a, 0x1d, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x42, 0x79,
	0x49, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61,
	0x72, 0x74, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x73, 0x22, 0x80, 0x01, 0x0a,
	0x1e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x74, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e, 0x6d, 0x69, 0x72, 0x72,
	0x6f, 0x72, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x42,
	0x3c, 0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x63, 0x6c, 0x2e, 0x67, 0x61, 0x69, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72, 0x5a,
	0x1c, 0x74, 0x63, 0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x61, 0x69, 0x61, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x6d, 0x69, 0x72, 0x72, 0x6f, 0x72,
}

var (
	file_protocol_gaia_mirror_device_proto_rawDescOnce sync.Once
	file_protocol_gaia_mirror_device_proto_rawDescData = file_protocol_gaia_mirror_device_proto_rawDesc
)

func file_protocol_gaia_mirror_device_proto_rawDescGZIP() []byte {
	file_protocol_gaia_mirror_device_proto_rawDescOnce.Do(func() {
		file_protocol_gaia_mirror_device_proto_rawDescData = protoimpl.X.CompressGZIP(file_protocol_gaia_mirror_device_proto_rawDescData)
	})
	return file_protocol_gaia_mirror_device_proto_rawDescData
}

var file_protocol_gaia_mirror_device_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_protocol_gaia_mirror_device_proto_goTypes = []interface{}{
	(*UserDevice)(nil),                      // 0: protocol.gaia.mirror.UserDevice
	(*GetDevicesByPartnerUserRequest)(nil),  // 1: protocol.gaia.mirror.GetDevicesByPartnerUserRequest
	(*GetDevicesByPartnerUserResponse)(nil), // 2: protocol.gaia.mirror.GetDevicesByPartnerUserResponse
	(*GetDevicesRangeData)(nil),             // 3: protocol.gaia.mirror.GetDevicesRangeData
	(*GetDevicesRangeRequest)(nil),          // 4: protocol.gaia.mirror.GetDevicesRangeRequest
	(*GetDevicesRangeResponse)(nil),         // 5: protocol.gaia.mirror.GetDevicesRangeResponse
	(*GetUserDevicesRangeData)(nil),         // 6: protocol.gaia.mirror.GetUserDevicesRangeData
	(*GetUserDevicesRangeRequest)(nil),      // 7: protocol.gaia.mirror.GetUserDevicesRangeRequest
	(*GetUserDevicesRangeResponse)(nil),     // 8: protocol.gaia.mirror.GetUserDevicesRangeResponse
	(*Device)(nil),                          // 9: protocol.gaia.mirror.Device
	(*GetPartnerDevicesByIdsRequest)(nil),   // 10: protocol.gaia.mirror.GetPartnerDevicesByIdsRequest
	(*GetPartnerDevicesByIdsResponse)(nil),  // 11: protocol.gaia.mirror.GetPartnerDevicesByIdsResponse
}
var file_protocol_gaia_mirror_device_proto_depIdxs = []int32{
	0, // 0: protocol.gaia.mirror.GetDevicesByPartnerUserResponse.data:type_name -> protocol.gaia.mirror.UserDevice
	3, // 1: protocol.gaia.mirror.GetDevicesRangeResponse.data:type_name -> protocol.gaia.mirror.GetDevicesRangeData
	6, // 2: protocol.gaia.mirror.GetUserDevicesRangeResponse.data:type_name -> protocol.gaia.mirror.GetUserDevicesRangeData
	9, // 3: protocol.gaia.mirror.GetPartnerDevicesByIdsResponse.data:type_name -> protocol.gaia.mirror.Device
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_protocol_gaia_mirror_device_proto_init() }
func file_protocol_gaia_mirror_device_proto_init() {
	if File_protocol_gaia_mirror_device_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protocol_gaia_mirror_device_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_gaia_mirror_device_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDevicesByPartnerUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_gaia_mirror_device_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDevicesByPartnerUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_gaia_mirror_device_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDevicesRangeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_gaia_mirror_device_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDevicesRangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_gaia_mirror_device_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDevicesRangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_gaia_mirror_device_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDevicesRangeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_gaia_mirror_device_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDevicesRangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_gaia_mirror_device_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDevicesRangeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_gaia_mirror_device_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_gaia_mirror_device_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPartnerDevicesByIdsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocol_gaia_mirror_device_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPartnerDevicesByIdsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protocol_gaia_mirror_device_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protocol_gaia_mirror_device_proto_goTypes,
		DependencyIndexes: file_protocol_gaia_mirror_device_proto_depIdxs,
		MessageInfos:      file_protocol_gaia_mirror_device_proto_msgTypes,
	}.Build()
	File_protocol_gaia_mirror_device_proto = out.File
	file_protocol_gaia_mirror_device_proto_rawDesc = nil
	file_protocol_gaia_mirror_device_proto_goTypes = nil
	file_protocol_gaia_mirror_device_proto_depIdxs = nil
}
