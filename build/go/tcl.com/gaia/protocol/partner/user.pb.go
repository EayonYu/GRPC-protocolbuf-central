// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protocol/common/partner/user.proto

package partner // import "tcl.com/gaia/protocol/partner"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import any "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// https://confluence.tclking.com/display/IoT4/Partner+API+Common+Objects#PartnerAPICommonObjects-User
type AccountSystemId int32

const (
	AccountSystemId_TCL_SSO         AccountSystemId = 0
	AccountSystemId_WE_CHAT_OPEN_ID AccountSystemId = 1
	AccountSystemId_MOBILE_PHONE    AccountSystemId = 2
)

var AccountSystemId_name = map[int32]string{
	0: "TCL_SSO",
	1: "WE_CHAT_OPEN_ID",
	2: "MOBILE_PHONE",
}
var AccountSystemId_value = map[string]int32{
	"TCL_SSO":         0,
	"WE_CHAT_OPEN_ID": 1,
	"MOBILE_PHONE":    2,
}

func (x AccountSystemId) Enum() *AccountSystemId {
	p := new(AccountSystemId)
	*p = x
	return p
}
func (x AccountSystemId) String() string {
	return proto.EnumName(AccountSystemId_name, int32(x))
}
func (x *AccountSystemId) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AccountSystemId_value, data, "AccountSystemId")
	if err != nil {
		return err
	}
	*x = AccountSystemId(value)
	return nil
}
func (AccountSystemId) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_user_b1c1047ab397bc71, []int{0}
}

type IDType int32

const (
	IDType_ID_TYPE_INT    IDType = 0
	IDType_ID_TYPE_STRING IDType = 1
)

var IDType_name = map[int32]string{
	0: "ID_TYPE_INT",
	1: "ID_TYPE_STRING",
}
var IDType_value = map[string]int32{
	"ID_TYPE_INT":    0,
	"ID_TYPE_STRING": 1,
}

func (x IDType) Enum() *IDType {
	p := new(IDType)
	*p = x
	return p
}
func (x IDType) String() string {
	return proto.EnumName(IDType_name, int32(x))
}
func (x *IDType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(IDType_value, data, "IDType")
	if err != nil {
		return err
	}
	*x = IDType(value)
	return nil
}
func (IDType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_user_b1c1047ab397bc71, []int{1}
}

type LoginDetails struct {
	AccountSystemId      *AccountSystemId `protobuf:"varint,1,req,name=account_system_id,json=accountSystemId,enum=protocol.common.partner.AccountSystemId" json:"account_system_id,omitempty"`
	LoginAccountId       *string          `protobuf:"bytes,2,req,name=login_account_id,json=loginAccountId" json:"login_account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *LoginDetails) Reset()         { *m = LoginDetails{} }
func (m *LoginDetails) String() string { return proto.CompactTextString(m) }
func (*LoginDetails) ProtoMessage()    {}
func (*LoginDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_b1c1047ab397bc71, []int{0}
}
func (m *LoginDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginDetails.Unmarshal(m, b)
}
func (m *LoginDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginDetails.Marshal(b, m, deterministic)
}
func (dst *LoginDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginDetails.Merge(dst, src)
}
func (m *LoginDetails) XXX_Size() int {
	return xxx_messageInfo_LoginDetails.Size(m)
}
func (m *LoginDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginDetails.DiscardUnknown(m)
}

var xxx_messageInfo_LoginDetails proto.InternalMessageInfo

func (m *LoginDetails) GetAccountSystemId() AccountSystemId {
	if m != nil && m.AccountSystemId != nil {
		return *m.AccountSystemId
	}
	return AccountSystemId_TCL_SSO
}

func (m *LoginDetails) GetLoginAccountId() string {
	if m != nil && m.LoginAccountId != nil {
		return *m.LoginAccountId
	}
	return ""
}

type User struct {
	UserId               *int32          `protobuf:"varint,1,req,name=user_id,json=userId" json:"user_id,omitempty"`
	TenantId             *string         `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId" json:"tenant_id,omitempty"`
	ImmutableIdentity    *string         `protobuf:"bytes,3,opt,name=immutable_identity,json=immutableIdentity" json:"immutable_identity,omitempty"`
	UserName             *string         `protobuf:"bytes,4,opt,name=user_name,json=userName" json:"user_name,omitempty"`
	LoginDetails         []*LoginDetails `protobuf:"bytes,5,rep,name=login_details,json=loginDetails" json:"login_details,omitempty"`
	Extra                *any.Any        `protobuf:"bytes,6,opt,name=extra" json:"extra,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_b1c1047ab397bc71, []int{1}
}
func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (dst *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(dst, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetUserId() int32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *User) GetTenantId() string {
	if m != nil && m.TenantId != nil {
		return *m.TenantId
	}
	return ""
}

func (m *User) GetImmutableIdentity() string {
	if m != nil && m.ImmutableIdentity != nil {
		return *m.ImmutableIdentity
	}
	return ""
}

func (m *User) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

func (m *User) GetLoginDetails() []*LoginDetails {
	if m != nil {
		return m.LoginDetails
	}
	return nil
}

func (m *User) GetExtra() *any.Any {
	if m != nil {
		return m.Extra
	}
	return nil
}

type IntDelimiters struct {
	Delimiters           []int32  `protobuf:"varint,1,rep,name=delimiters" json:"delimiters,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IntDelimiters) Reset()         { *m = IntDelimiters{} }
func (m *IntDelimiters) String() string { return proto.CompactTextString(m) }
func (*IntDelimiters) ProtoMessage()    {}
func (*IntDelimiters) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_b1c1047ab397bc71, []int{2}
}
func (m *IntDelimiters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IntDelimiters.Unmarshal(m, b)
}
func (m *IntDelimiters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IntDelimiters.Marshal(b, m, deterministic)
}
func (dst *IntDelimiters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IntDelimiters.Merge(dst, src)
}
func (m *IntDelimiters) XXX_Size() int {
	return xxx_messageInfo_IntDelimiters.Size(m)
}
func (m *IntDelimiters) XXX_DiscardUnknown() {
	xxx_messageInfo_IntDelimiters.DiscardUnknown(m)
}

var xxx_messageInfo_IntDelimiters proto.InternalMessageInfo

func (m *IntDelimiters) GetDelimiters() []int32 {
	if m != nil {
		return m.Delimiters
	}
	return nil
}

type StringDelimiters struct {
	Delimiters           []string `protobuf:"bytes,1,rep,name=delimiters" json:"delimiters,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StringDelimiters) Reset()         { *m = StringDelimiters{} }
func (m *StringDelimiters) String() string { return proto.CompactTextString(m) }
func (*StringDelimiters) ProtoMessage()    {}
func (*StringDelimiters) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_b1c1047ab397bc71, []int{3}
}
func (m *StringDelimiters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringDelimiters.Unmarshal(m, b)
}
func (m *StringDelimiters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringDelimiters.Marshal(b, m, deterministic)
}
func (dst *StringDelimiters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringDelimiters.Merge(dst, src)
}
func (m *StringDelimiters) XXX_Size() int {
	return xxx_messageInfo_StringDelimiters.Size(m)
}
func (m *StringDelimiters) XXX_DiscardUnknown() {
	xxx_messageInfo_StringDelimiters.DiscardUnknown(m)
}

var xxx_messageInfo_StringDelimiters proto.InternalMessageInfo

func (m *StringDelimiters) GetDelimiters() []string {
	if m != nil {
		return m.Delimiters
	}
	return nil
}

type UserChunksPayload struct {
	IdType *IDType `protobuf:"varint,1,req,name=id_type,json=idType,enum=protocol.common.partner.IDType" json:"id_type,omitempty"`
	// Types that are valid to be assigned to Delimiters:
	//	*UserChunksPayload_IntDelimiters
	//	*UserChunksPayload_StringDelimiters
	Delimiters           isUserChunksPayload_Delimiters `protobuf_oneof:"delimiters"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *UserChunksPayload) Reset()         { *m = UserChunksPayload{} }
func (m *UserChunksPayload) String() string { return proto.CompactTextString(m) }
func (*UserChunksPayload) ProtoMessage()    {}
func (*UserChunksPayload) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_b1c1047ab397bc71, []int{4}
}
func (m *UserChunksPayload) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserChunksPayload.Unmarshal(m, b)
}
func (m *UserChunksPayload) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserChunksPayload.Marshal(b, m, deterministic)
}
func (dst *UserChunksPayload) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserChunksPayload.Merge(dst, src)
}
func (m *UserChunksPayload) XXX_Size() int {
	return xxx_messageInfo_UserChunksPayload.Size(m)
}
func (m *UserChunksPayload) XXX_DiscardUnknown() {
	xxx_messageInfo_UserChunksPayload.DiscardUnknown(m)
}

var xxx_messageInfo_UserChunksPayload proto.InternalMessageInfo

func (m *UserChunksPayload) GetIdType() IDType {
	if m != nil && m.IdType != nil {
		return *m.IdType
	}
	return IDType_ID_TYPE_INT
}

type isUserChunksPayload_Delimiters interface {
	isUserChunksPayload_Delimiters()
}

type UserChunksPayload_IntDelimiters struct {
	IntDelimiters *IntDelimiters `protobuf:"bytes,2,opt,name=int_delimiters,json=intDelimiters,oneof"`
}

type UserChunksPayload_StringDelimiters struct {
	StringDelimiters *StringDelimiters `protobuf:"bytes,3,opt,name=string_delimiters,json=stringDelimiters,oneof"`
}

func (*UserChunksPayload_IntDelimiters) isUserChunksPayload_Delimiters() {}

func (*UserChunksPayload_StringDelimiters) isUserChunksPayload_Delimiters() {}

func (m *UserChunksPayload) GetDelimiters() isUserChunksPayload_Delimiters {
	if m != nil {
		return m.Delimiters
	}
	return nil
}

func (m *UserChunksPayload) GetIntDelimiters() *IntDelimiters {
	if x, ok := m.GetDelimiters().(*UserChunksPayload_IntDelimiters); ok {
		return x.IntDelimiters
	}
	return nil
}

func (m *UserChunksPayload) GetStringDelimiters() *StringDelimiters {
	if x, ok := m.GetDelimiters().(*UserChunksPayload_StringDelimiters); ok {
		return x.StringDelimiters
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UserChunksPayload) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UserChunksPayload_OneofMarshaler, _UserChunksPayload_OneofUnmarshaler, _UserChunksPayload_OneofSizer, []interface{}{
		(*UserChunksPayload_IntDelimiters)(nil),
		(*UserChunksPayload_StringDelimiters)(nil),
	}
}

func _UserChunksPayload_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UserChunksPayload)
	// delimiters
	switch x := m.Delimiters.(type) {
	case *UserChunksPayload_IntDelimiters:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.IntDelimiters); err != nil {
			return err
		}
	case *UserChunksPayload_StringDelimiters:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.StringDelimiters); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UserChunksPayload.Delimiters has unexpected type %T", x)
	}
	return nil
}

func _UserChunksPayload_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UserChunksPayload)
	switch tag {
	case 2: // delimiters.int_delimiters
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(IntDelimiters)
		err := b.DecodeMessage(msg)
		m.Delimiters = &UserChunksPayload_IntDelimiters{msg}
		return true, err
	case 3: // delimiters.string_delimiters
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StringDelimiters)
		err := b.DecodeMessage(msg)
		m.Delimiters = &UserChunksPayload_StringDelimiters{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UserChunksPayload_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UserChunksPayload)
	// delimiters
	switch x := m.Delimiters.(type) {
	case *UserChunksPayload_IntDelimiters:
		s := proto.Size(x.IntDelimiters)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *UserChunksPayload_StringDelimiters:
		s := proto.Size(x.StringDelimiters)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*LoginDetails)(nil), "protocol.common.partner.LoginDetails")
	proto.RegisterType((*User)(nil), "protocol.common.partner.User")
	proto.RegisterType((*IntDelimiters)(nil), "protocol.common.partner.IntDelimiters")
	proto.RegisterType((*StringDelimiters)(nil), "protocol.common.partner.StringDelimiters")
	proto.RegisterType((*UserChunksPayload)(nil), "protocol.common.partner.UserChunksPayload")
	proto.RegisterEnum("protocol.common.partner.AccountSystemId", AccountSystemId_name, AccountSystemId_value)
	proto.RegisterEnum("protocol.common.partner.IDType", IDType_name, IDType_value)
}

func init() {
	proto.RegisterFile("protocol/common/partner/user.proto", fileDescriptor_user_b1c1047ab397bc71)
}

var fileDescriptor_user_b1c1047ab397bc71 = []byte{
	// 559 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x53, 0xcf, 0x6f, 0xd3, 0x4c,
	0x14, 0x8c, 0x9d, 0x26, 0xfd, 0xf2, 0x92, 0x26, 0xce, 0x7e, 0x48, 0x35, 0xa0, 0x42, 0x14, 0x09,
	0x64, 0x2a, 0xd5, 0x96, 0x72, 0xe2, 0x84, 0xd4, 0x36, 0x11, 0x59, 0x54, 0x92, 0xc8, 0x31, 0xe2,
	0xc7, 0x65, 0xb5, 0xf5, 0x2e, 0x61, 0x85, 0xbd, 0x1b, 0xd9, 0x1b, 0x09, 0xdf, 0x38, 0x71, 0xe4,
	0x6f, 0x46, 0xb6, 0xe3, 0xe2, 0x56, 0x0a, 0x27, 0x6b, 0x67, 0xde, 0x9b, 0xf1, 0xcc, 0xda, 0x30,
	0xde, 0x26, 0x4a, 0xab, 0x50, 0x45, 0x5e, 0xa8, 0xe2, 0x58, 0x49, 0x6f, 0x4b, 0x13, 0x2d, 0x79,
	0xe2, 0xed, 0x52, 0x9e, 0xb8, 0x05, 0x89, 0x4e, 0xab, 0x19, 0xb7, 0x9c, 0x71, 0xf7, 0x33, 0x4f,
	0x1e, 0x6f, 0x94, 0xda, 0x44, 0xdc, 0x2b, 0xf8, 0xdb, 0xdd, 0x57, 0x8f, 0xca, 0xac, 0xdc, 0x19,
	0xff, 0x36, 0xa0, 0x77, 0xa3, 0x36, 0x42, 0x4e, 0xb9, 0xa6, 0x22, 0x4a, 0x51, 0x00, 0x43, 0x1a,
	0x86, 0x6a, 0x27, 0x35, 0x49, 0xb3, 0x54, 0xf3, 0x98, 0x08, 0x66, 0x1b, 0x23, 0xd3, 0xe9, 0x4f,
	0x1c, 0xf7, 0x80, 0x81, 0x7b, 0x59, 0x6e, 0xac, 0x8b, 0x05, 0xcc, 0xfc, 0x01, 0xbd, 0x0f, 0x20,
	0x07, 0xac, 0x28, 0x77, 0x21, 0x95, 0xb6, 0x60, 0xb6, 0x39, 0x32, 0x9d, 0x8e, 0xdf, 0x2f, 0xf0,
	0xbd, 0x00, 0x66, 0xe3, 0x9f, 0x26, 0x1c, 0x7d, 0x48, 0x79, 0x82, 0x4e, 0xe1, 0x38, 0xcf, 0x56,
	0xd9, 0xb7, 0xfc, 0x76, 0x7e, 0xc4, 0x0c, 0x3d, 0x85, 0x8e, 0xe6, 0x92, 0x56, 0x22, 0x86, 0xd3,
	0xf1, 0xff, 0x2b, 0x01, 0xcc, 0xd0, 0x05, 0x20, 0x11, 0xc7, 0x3b, 0x4d, 0x6f, 0x23, 0x4e, 0x04,
	0xe3, 0x52, 0x0b, 0x9d, 0xd9, 0xcd, 0x62, 0x6a, 0x78, 0xc7, 0xe0, 0x3d, 0x91, 0x6b, 0x15, 0x26,
	0x92, 0xc6, 0xdc, 0x3e, 0x2a, 0xb5, 0x72, 0x60, 0x41, 0x63, 0x8e, 0xde, 0xc1, 0x49, 0xf9, 0xd2,
	0xac, 0xec, 0xc6, 0x6e, 0x8d, 0x9a, 0x4e, 0x77, 0xf2, 0xe2, 0x60, 0x0d, 0xf5, 0x22, 0xfd, 0x5e,
	0x54, 0xaf, 0xf5, 0x1c, 0x5a, 0xfc, 0x87, 0x4e, 0xa8, 0xdd, 0x1e, 0x19, 0x4e, 0x77, 0xf2, 0xc8,
	0x2d, 0xaf, 0xc4, 0xad, 0xae, 0xc4, 0xbd, 0x94, 0x99, 0x5f, 0x8e, 0x8c, 0x3d, 0x38, 0xc1, 0x52,
	0x4f, 0x79, 0x24, 0x62, 0xa1, 0x79, 0x92, 0xa2, 0x67, 0x00, 0xec, 0xee, 0x64, 0x1b, 0xa3, 0xa6,
	0xd3, 0xf2, 0x6b, 0xc8, 0x78, 0x02, 0xd6, 0x5a, 0x27, 0x42, 0x6e, 0xfe, 0xb9, 0xd3, 0xb9, 0xb7,
	0xf3, 0xcb, 0x84, 0x61, 0xde, 0xf3, 0xf5, 0xb7, 0x9d, 0xfc, 0x9e, 0xae, 0x68, 0x16, 0x29, 0xca,
	0xd0, 0x6b, 0x38, 0x16, 0x8c, 0xe8, 0x6c, 0xcb, 0xf7, 0x77, 0xfe, 0xfc, 0x60, 0x58, 0x3c, 0x0d,
	0xb2, 0x2d, 0xf7, 0xdb, 0x82, 0xe5, 0x4f, 0xb4, 0x84, 0xbe, 0x90, 0x9a, 0xd4, 0x3c, 0xcd, 0x22,
	0xe9, 0xcb, 0xc3, 0x02, 0xf5, 0x8c, 0xf3, 0x86, 0x7f, 0x22, 0xee, 0x85, 0xfe, 0x04, 0xc3, 0xb4,
	0x08, 0x55, 0xd7, 0x6c, 0x16, 0x9a, 0xaf, 0x0e, 0x6a, 0x3e, 0xac, 0x61, 0xde, 0xf0, 0xad, 0xf4,
	0x01, 0x76, 0xd5, 0xab, 0x57, 0x73, 0x3e, 0x83, 0xc1, 0x83, 0xcf, 0x17, 0x75, 0xe1, 0x38, 0xb8,
	0xbe, 0x21, 0xeb, 0xf5, 0xd2, 0x6a, 0xa0, 0xff, 0x61, 0xf0, 0x71, 0x46, 0xae, 0xe7, 0x97, 0x01,
	0x59, 0xae, 0x66, 0x0b, 0x82, 0xa7, 0x96, 0x81, 0x2c, 0xe8, 0xbd, 0x5f, 0x5e, 0xe1, 0x9b, 0x19,
	0x59, 0xcd, 0x97, 0x8b, 0x99, 0x65, 0x9e, 0x5f, 0x40, 0xbb, 0x6c, 0x04, 0x0d, 0xa0, 0x8b, 0xa7,
	0x24, 0xf8, 0xbc, 0x9a, 0x11, 0xbc, 0x08, 0xac, 0x06, 0x42, 0xd0, 0xaf, 0x80, 0x75, 0xe0, 0xe3,
	0xc5, 0x5b, 0xcb, 0xb8, 0x7a, 0x03, 0x67, 0xa1, 0x8a, 0x5d, 0x1d, 0x46, 0xee, 0x86, 0x0a, 0xfa,
	0x37, 0xd0, 0x3e, 0xc9, 0x97, 0xb3, 0x9c, 0x0a, 0x55, 0xec, 0xe5, 0xb4, 0x77, 0xf7, 0xf7, 0xef,
	0xe9, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x35, 0xbe, 0x0d, 0x14, 0x10, 0x04, 0x00, 0x00,
}
