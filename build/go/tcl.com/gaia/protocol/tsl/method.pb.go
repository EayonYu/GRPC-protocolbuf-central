// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protocol/common/tsl/method.proto

package tsl // import "tcl.com/gaia/protocol/tsl"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// https://confluence.tclking.com/display/IoT4/Partner+API+Common+Objects#PartnerAPICommonObjects-TSLMethod
type TSLMethodStatus int32

const (
	TSLMethodStatus_TSL_METHOD_STATUS_UNKNOWN     TSLMethodStatus = 0
	TSLMethodStatus_TSL_METHOD_STATUS_DELIVERED   TSLMethodStatus = 1
	TSLMethodStatus_TSL_METHOD_STATUS_UNDELIVERED TSLMethodStatus = 2
	TSLMethodStatus_TSL_METHOD_STATUS_COMPLETE    TSLMethodStatus = 3
)

var TSLMethodStatus_name = map[int32]string{
	0: "TSL_METHOD_STATUS_UNKNOWN",
	1: "TSL_METHOD_STATUS_DELIVERED",
	2: "TSL_METHOD_STATUS_UNDELIVERED",
	3: "TSL_METHOD_STATUS_COMPLETE",
}
var TSLMethodStatus_value = map[string]int32{
	"TSL_METHOD_STATUS_UNKNOWN":     0,
	"TSL_METHOD_STATUS_DELIVERED":   1,
	"TSL_METHOD_STATUS_UNDELIVERED": 2,
	"TSL_METHOD_STATUS_COMPLETE":    3,
}

func (x TSLMethodStatus) Enum() *TSLMethodStatus {
	p := new(TSLMethodStatus)
	*p = x
	return p
}
func (x TSLMethodStatus) String() string {
	return proto.EnumName(TSLMethodStatus_name, int32(x))
}
func (x *TSLMethodStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TSLMethodStatus_value, data, "TSLMethodStatus")
	if err != nil {
		return err
	}
	*x = TSLMethodStatus(value)
	return nil
}
func (TSLMethodStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_method_f509a937be132aa9, []int{0}
}

type TSLMethod struct {
	DeviceId             *string           `protobuf:"bytes,1,req,name=device_id,json=deviceId" json:"device_id,omitempty"`
	InvocationId         *string           `protobuf:"bytes,2,req,name=invocation_id,json=invocationId" json:"invocation_id,omitempty"`
	Status               *TSLMethodStatus  `protobuf:"varint,3,req,name=status,enum=protocol.common.tsl.TSLMethodStatus" json:"status,omitempty"`
	InputParams          []*TSLValueObject `protobuf:"bytes,4,rep,name=input_params,json=inputParams" json:"input_params,omitempty"`
	OutputValues         []*TSLValueObject `protobuf:"bytes,5,rep,name=output_values,json=outputValues" json:"output_values,omitempty"`
	Timestamp            *string           `protobuf:"bytes,6,req,name=timestamp" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TSLMethod) Reset()         { *m = TSLMethod{} }
func (m *TSLMethod) String() string { return proto.CompactTextString(m) }
func (*TSLMethod) ProtoMessage()    {}
func (*TSLMethod) Descriptor() ([]byte, []int) {
	return fileDescriptor_method_f509a937be132aa9, []int{0}
}
func (m *TSLMethod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TSLMethod.Unmarshal(m, b)
}
func (m *TSLMethod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TSLMethod.Marshal(b, m, deterministic)
}
func (dst *TSLMethod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TSLMethod.Merge(dst, src)
}
func (m *TSLMethod) XXX_Size() int {
	return xxx_messageInfo_TSLMethod.Size(m)
}
func (m *TSLMethod) XXX_DiscardUnknown() {
	xxx_messageInfo_TSLMethod.DiscardUnknown(m)
}

var xxx_messageInfo_TSLMethod proto.InternalMessageInfo

func (m *TSLMethod) GetDeviceId() string {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return ""
}

func (m *TSLMethod) GetInvocationId() string {
	if m != nil && m.InvocationId != nil {
		return *m.InvocationId
	}
	return ""
}

func (m *TSLMethod) GetStatus() TSLMethodStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return TSLMethodStatus_TSL_METHOD_STATUS_UNKNOWN
}

func (m *TSLMethod) GetInputParams() []*TSLValueObject {
	if m != nil {
		return m.InputParams
	}
	return nil
}

func (m *TSLMethod) GetOutputValues() []*TSLValueObject {
	if m != nil {
		return m.OutputValues
	}
	return nil
}

func (m *TSLMethod) GetTimestamp() string {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return ""
}

func init() {
	proto.RegisterType((*TSLMethod)(nil), "protocol.common.tsl.TSLMethod")
	proto.RegisterEnum("protocol.common.tsl.TSLMethodStatus", TSLMethodStatus_name, TSLMethodStatus_value)
}

func init() {
	proto.RegisterFile("protocol/common/tsl/method.proto", fileDescriptor_method_f509a937be132aa9)
}

var fileDescriptor_method_f509a937be132aa9 = []byte{
	// 358 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x41, 0x6f, 0xa2, 0x40,
	0x18, 0x86, 0x57, 0xdc, 0x35, 0xcb, 0xa8, 0xbb, 0x66, 0xf6, 0x82, 0xba, 0xae, 0xec, 0xba, 0x07,
	0xd3, 0x03, 0x24, 0x1e, 0x7a, 0xea, 0xa5, 0xad, 0x34, 0x9a, 0xa2, 0x18, 0x40, 0x9b, 0xf4, 0x42,
	0xa6, 0x03, 0x69, 0x69, 0x18, 0x86, 0x38, 0x1f, 0xfe, 0x92, 0xfe, 0x9b, 0xfe, 0xb9, 0x86, 0xa1,
	0x95, 0xa4, 0xda, 0xa4, 0xd7, 0xf7, 0x7b, 0x9e, 0x17, 0xde, 0x64, 0x90, 0x9e, 0x6d, 0x39, 0x70,
	0xca, 0x13, 0x93, 0x72, 0xc6, 0x78, 0x6a, 0x82, 0x48, 0x4c, 0x16, 0xc1, 0x03, 0x0f, 0x0d, 0x79,
	0xc2, 0xbf, 0xde, 0x08, 0xa3, 0x24, 0x0c, 0x10, 0x49, 0x6f, 0x78, 0x4c, 0xdb, 0x91, 0x24, 0x8f,
	0x4a, 0xeb, 0xdf, 0xb3, 0x82, 0x54, 0xdf, 0xb3, 0x17, 0xb2, 0x09, 0xf7, 0x91, 0x1a, 0x46, 0xbb,
	0x98, 0x46, 0x41, 0x1c, 0x6a, 0x35, 0x5d, 0x19, 0xab, 0xee, 0xf7, 0x32, 0x98, 0x87, 0x78, 0x84,
	0xda, 0x71, 0xba, 0xe3, 0x94, 0x40, 0xcc, 0xd3, 0x02, 0x50, 0x24, 0xd0, 0xaa, 0xc2, 0x79, 0x88,
	0xcf, 0x50, 0x43, 0x00, 0x81, 0x5c, 0x68, 0x75, 0x5d, 0x19, 0xff, 0x98, 0xfc, 0x37, 0x8e, 0xfc,
	0x96, 0xb1, 0xff, 0xa2, 0x27, 0x59, 0xf7, 0xd5, 0xc1, 0x57, 0xa8, 0x15, 0xa7, 0x59, 0x0e, 0x41,
	0x46, 0xb6, 0x84, 0x09, 0xed, 0xab, 0x5e, 0x1f, 0x37, 0x27, 0xa3, 0x8f, 0x3a, 0x36, 0xc5, 0x10,
	0xe7, 0xee, 0x31, 0xa2, 0xe0, 0x36, 0xa5, 0xb8, 0x92, 0x1e, 0x9e, 0xa1, 0x36, 0xcf, 0xa1, 0x28,
	0x92, 0x5b, 0x85, 0xf6, 0xed, 0xf3, 0x45, 0xad, 0xd2, 0x94, 0x91, 0xc0, 0xbf, 0x91, 0x0a, 0x31,
	0x8b, 0x04, 0x10, 0x96, 0x69, 0x0d, 0x39, 0xb8, 0x0a, 0x4e, 0x9e, 0x6a, 0xe8, 0xe7, 0xbb, 0x2d,
	0x78, 0x80, 0xba, 0xbe, 0x67, 0x07, 0x0b, 0xcb, 0x9f, 0x39, 0xd3, 0xc0, 0xf3, 0xcf, 0xfd, 0xb5,
	0x17, 0xac, 0x97, 0xd7, 0x4b, 0xe7, 0x66, 0xd9, 0xf9, 0x82, 0x87, 0xa8, 0x7f, 0x78, 0x9e, 0x5a,
	0xf6, 0x7c, 0x63, 0xb9, 0xd6, 0xb4, 0x53, 0xc3, 0x7f, 0xd1, 0xe0, 0x98, 0x5f, 0x21, 0x0a, 0xfe,
	0x83, 0x7a, 0x87, 0xc8, 0xa5, 0xb3, 0x58, 0xd9, 0x96, 0x6f, 0x75, 0xea, 0x17, 0xa7, 0xa8, 0x4b,
	0x39, 0x33, 0x80, 0x26, 0xc6, 0x3d, 0x89, 0x49, 0xb5, 0x1a, 0x44, 0x72, 0xdb, 0x2d, 0x62, 0xca,
	0x99, 0x59, 0x9c, 0xcc, 0xfd, 0xfb, 0x00, 0x91, 0xbc, 0x04, 0x00, 0x00, 0xff, 0xff, 0x5a, 0x7a,
	0x97, 0x1c, 0x65, 0x02, 0x00, 0x00,
}
