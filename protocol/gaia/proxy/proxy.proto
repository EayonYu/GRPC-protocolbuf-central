syntax = "proto2";

package protocol.gaia.proxy;
option go_package = "tcl.com/gaia/protocol/proxy";
option java_package = "com.tcl.gaia.protocol.proxy";


import "google/protobuf/any.proto";

import "protocol/common/constant/request.proto";
import "protocol/common/constant/response.proto";


enum ResourceType {
    RESOURCE_TYPE_USER = 1;
    RESOURCE_TYPE_DEVICE = 2;
    RESOURCE_TYPE_USER_DEVICE_BINDING = 3;
}

message GetResourceChunksRequestHeader {
}

message GetResourceChunksRequestPayload {
    required string partner_name = 1;
    required string resource_type = 2;
    required int32 chunk_size = 3;
}

message GetResourceChunksRequest {
    optional GetResourceChunksRequestHeader header = 1;
    required GetResourceChunksRequestPayload payload = 2;
}

message GetResourceChunksResponse {
    repeated string delimiters = 1;
}









message GetResourcesRequest {
    required string resource_type = 1;
    optional string next_id = 2;
    optional string end_id = 3;
}

message GetResourcesResponse {
}

enum ProxyRequestType {
    GET_RESOURCE_CHUNKS = 0;
    GET_RESOURCES = 1;
}

message ProxyRequestPayload {
    required string partner_name = 1;
    required string proxy_request_type = 2;
    oneof body {
        GetResourceChunksRequest get_resource_chunks_request = 3;
        GetResourcesRequest get_resources_request = 4;
    }
}

message ProxyRequest {
    optional protocol.common.constant.RequestHeader header = 1;
    required ProxyRequestPayload payload = 2;
}

message ProxyResponsePayload {
    required int32 http_status_code = 1;
    oneof response {
        GetResourceChunksResponse get_resource_chunks_response = 2;
        GetResourcesResponse get_resources_response = 3;
    }
}

message ProxyResponse {
    required protocol.common.constant.ResponseHeader header = 1;
    optional ProxyResponsePayload payload = 2;
}