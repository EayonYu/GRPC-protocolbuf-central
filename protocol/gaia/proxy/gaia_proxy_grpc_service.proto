syntax = "proto2";

package protocol.gaia.proxy;
option go_package = "tcl.com/gaia/protocol/proxy";
option java_package = "com.tcl.gaia.protocol.proxy";
option java_generic_services = true;


import "google/api/annotations.proto";

import "protocol/gaia/proxy/ping.proto";
import "protocol/gaia/proxy/partner.proto";
import "protocol/gaia/proxy/user.proto";


service GaiaProxyGrpc {

    rpc Ping(PingRequest) returns (PingResponse) {
        option (google.api.http) = {
            get: "/api/ping"
        };
    };

    // partner management
    rpc ListPartner(ListPartnerRequest) returns(ListPartnerResponse){
        option (google.api.http) = {
            get: "/api/partners"
        };
    }

    rpc GetPartner(GetPartnerRequest) returns(GetPartnerResponse) {
        option (google.api.http) = {
            get: "/api/partners/{partner_id}"
        };
    }

    rpc AddPartner(AddPartnerRequest) returns(AddPartnerResponse) {
        option (google.api.http) = {
            post: "/api/partners"
            body: "*"
        };
    }

    // proxy
    rpc GetUserChunks(GetUserChunksRequest) returns(GetUserChunksResponse) {
        option (google.api.http) = {
            post: "/api/proxy/chunks/user"
            body: "*"
        };
    }

    rpc GetUsers(GetUsersRequest) returns(GetUsersResponse) {
        option (google.api.http) = {
            post: "/api/proxy/users"
            body: "*"
        };
    }
}