syntax = "proto2";

package protocol.gaia.mirror;
option go_package = "tcl.com/gaia/protocol/mirror";
option java_package = "com.tcl.gaia.protocol.mirror";


message UserDevice {
    optional int32 id = 1;

    optional string partner_name = 2;
    optional string partner_uuid = 3;

    optional int32 origin_user_id = 4;
    optional int32 origin_device_id = 5;
    optional string nick = 6;
    optional int32 available = 7;
    optional int32 type = 8;
    optional string body = 9;

    optional string created_at = 10;
    optional string updated_at = 11;
}

message GetDevicesByPartnerUserRequest {
    optional string partner_uuid = 1;
    optional string partner_user_id = 2;
}

message GetDevicesByPartnerUserResponse {
    optional int32 code = 1;
    optional string message = 2;
    repeated UserDevice data = 4;
}

message GetDevicesRangeData {
    optional int32 start = 1;
    optional int32 end = 2;
}

message GetDevicesRangeRequest {
    optional string partner_uuid = 1;
}

message GetDevicesRangeResponse {
    optional int32 code = 1;
    optional string message = 2;
    optional GetDevicesRangeData data = 3;
}

message GetUserDevicesRangeData {
    optional int32 start = 1;
    optional int32 end = 2;
}

message GetUserDevicesRangeRequest {
    optional string partner_uuid = 1;
}

message GetUserDevicesRangeResponse {
    optional int32 code = 1;
    optional string message = 2;
    optional GetUserDevicesRangeData data = 3;
}

message Device {
    optional int32 id = 1;
    optional string partner_name = 2;
    optional string partner_uuid = 3;
    optional int32 origin_device_id = 4;
    optional string nick_name = 5;
    optional string category = 6;
    optional string device_type = 7;
    optional string head_url = 8;
    optional string mac = 9;
    optional string body = 10;
    optional string created_at = 11;
    optional string updated_at = 12;
}

message GetPartnerDevicesByIdsRequest {
    optional string partner_uuid = 1;
    repeated int32 device_ids = 2;
}

message GetPartnerDevicesByIdsResponse {
    optional int32 code = 1;
    optional string message = 2;
    repeated Device data = 3;
}