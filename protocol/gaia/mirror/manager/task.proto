syntax = "proto2";

package protocol.gaia.mirror.manager;
option go_package = "tcl.com/gaia/protocol/mirror/manager";
option java_package = "com.tcl.gaia.protocol.mirror.manager";


import "protocol/common/constant/request.proto";
import "protocol/common/constant/response.proto";


message Task {
    required int32 id = 1;

    required string start_at = 2;
    required string end_at = 3;

    required string status = 4;
    required float percent = 5;
    required int32 retry_times = 6;
    required string error_reason = 7;
}

message TasksPage {
    required int32 total = 1;
    required int32 page = 2;
    required int32 size = 3;
    repeated Task tasks = 4;
}

message GetTasksByPartnerNameRequest {
    optional protocol.common.constant.RequestHeader header = 1;

    required string partner_name = 2;
    required int32 page = 3;
    required int32 size = 4;
}

message GetTasksByPartnerNameResponse {
    required protocol.common.constant.ResponseHeader header = 1;

    required int32 code = 2;
    required string message = 3;
    required TasksPage data = 4;
}


message ChunkTask {
    required int32 id = 1;

    required string chunk = 2;
    required string resource_type = 3;
    required string status = 4;
    required float percent = 5;

    required string start_at = 6;
    required string end_at = 7;
    required int32 retry_times = 8;
    required string worker_uuid = 9;
}

message ChunkTasksPage {
    required int32 total = 1;
    required int32 page = 2;
    required int32 size = 3;
    repeated ChunkTask chunk_tasks = 4;
}

message GetChunkTasksByTaskIDRequest {
    optional protocol.common.constant.RequestHeader header = 1;
    required string task_id = 2;
    required int32 page = 3;
    required int32 size = 4;
}

message GetChunkTasksByTaskIDResponse {
    required protocol.common.constant.ResponseHeader header = 1;
    required int32 code = 2;
    required string message = 3;
    required ChunkTasksPage data = 4;
}