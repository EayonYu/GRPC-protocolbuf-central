syntax = "proto2";


package protocol.common.partner;
option go_package = "tcl.com/gaia/protocol/partner";
option java_package = "com.tcl.gaia.protocol.partner";


import "google/protobuf/any.proto";

import "protocol/common/tsl/capability.proto";


enum DeviceType {
    DEVICE_TYPE_UNKNOWN = 0;
    DEVICE_TYPE_AIR_CONDITIONER = 1;
    DEVICE_TYPE_AIR_CLEANER	= 2;
    DEVICE_TYPE_WATER_PURIFIER = 3;
    DEVICE_TYPE_TELEVISION = 4;
    DEVICE_TYPE_PHONE = 5;
    DEVICE_TYPE_PERSONAL_COMPUTER = 6;
    DEVICE_TYPE_SOCKET = 7;
}

enum ConnectionType {
    CONNECTION_TYPE_UNKNOWN = 0;
    CONNECTION_TYPE_WIFI = 1;
    CONNECTION_TYPE_CELLULAR = 2;
    CONNECTION_TYPE_ZIG_BEE = 3;
    CONNECTION_TYPE_Z_WAVE = 4;
    CONNECTION_TYPE_LORA = 5;
    CONNECTION_TYPE_NB_IOT = 6;
}

message ConnectionAddress {

}

message Connection {
    required ConnectionType type = 1;
    optional ConnectionAddress address = 2;
}

message Geolocation {
    required float longitude = 1;
    required float latitude = 2;
}

message Location {
    required string room = 1;
    required int32 floor = 2;
}

message FirmwareVersions {
    required string wifiModule = 1;
    required int32 mcu = 2;
}

message DeviceIcons {
    optional string dp32 = 1;
    optional string dp64 = 2;
}

message DeviceInfo {
    required string deviceId = 1;
    optional string deviceName = 2;
    optional string tslId = 3;
    optional DeviceType deviceType = 4;
    optional string tenantId = 5;
    optional string manufacturerId = 6;
    optional string model = 7;
    optional string parentId = 8;
    optional string serialNo = 9;
    optional string mac = 10;
    repeated Connection Connections = 11;
    optional Geolocation geolocation = 12;
    optional Location location = 13;
    optional FirmwareVersions firmwareVersions = 14;
    optional DeviceIcons deviceIcons = 15;
    optional google.protobuf.Any extra = 16;
}

enum DeviceReachAbilityValue {
    DEVICE_REACH_ABILITY_VALUE_UNKNOWN = 0;
    DEVICE_REACH_ABILITY_VALUE_ONLINE = 1;
    DEVICE_REACH_ABILITY_VALUE_OFFLINE = 2;
}

message DeviceReachAbility {
    required string deviceId = 1;
    required DeviceReachAbilityValue value = 2;
    required string timestamp = 3;
}

message Device {
    required string deviceId = 1;
    required DeviceInfo deviceInfo = 2;
    optional DeviceReachAbility reachAbility = 3;
    repeated protocol.common.tsl.TSLCapability properties = 4;
}